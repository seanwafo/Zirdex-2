.row {
  max-width: $grid-width; //we set 114rem(1140px is the usual monitor width) as the default and if it's less than 114rem, then browser will occupy 100% of the width
  margin: 0 auto;
  font-size: 2rem;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical; // all element under .row class will have this setting EXCEPT for the last one.
  }

  //mixin clearfix for float issue
  @include clearfix;

  // attribute due to col- repeated below that needs to be DRY
  // class^= is selecting the class that STARTS with "col-"
  [class^='col-'] {
    float: left; // we always float these column to the left. they are now on the same row

    &:not(:last-child) {
      margin-right: $gutter-horizontal; // since gutter will be from the left column. we will not include the right column margin
    }
  }

  .col-1-of-2 {
    width: calc(
      (100% - #{$gutter-horizontal}) / 2
    ); // using the calc() function to get the desired column structure. we need to wrap the sass variable with #{}
  } // 100% of the width and subtract the gutter-horizontal then divide by 2 because there are 2 columns

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    ); // 2 multiply the col-1-of-3 to get the 2 columns combined into 1 big column and add the horizontal gutter
  }

  .col-1-of-4 {
    width: calc(((100% - 3 * #{$gutter-horizontal}) / 4));
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    ); // 3x the col-1-of-4 because we only want 3 sizes of the col-1-of-4
  }
}
